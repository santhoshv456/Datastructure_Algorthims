            /* Single Dimesion Array

            Console.WriteLine("Creating a blank array size 10");
            singleDimensionArray sda = new singleDimensionArray(10);
            
            Console.WriteLine("Printing the Array...");
            sda.traverseArray();

            Console.WriteLine("Inserting few values in the Array...");
            sda.insert(0,0);
            sda.insert(1,10);
            sda.insert(2,20);
            sda.insert(3,30);
            sda.insert(4,40);
            sda.insert(5,50);
            sda.insert(6,60);
            sda.insert(7,70);
            sda.insert(8,80);
            sda.insert(9,90);
            
            Console.WriteLine("Traversing the Array....");
            sda.traverseArray();

            Console.WriteLine("Accessing the cell number 1");
            sda.accessingCell(1);

            Console.WriteLine("Accessing the cell number 5");
            sda.accessingCell(5);


            Console.WriteLine("Searching value 30 in the Array");
            sda.searchValueInArray(30);
               
            Console.WriteLine("Deleting the cell 3 of the Array");
            sda.deleteValueFromArray(3);

            Console.WriteLine("After Deleting the cell value from Array");
            sda.traverseArray();

            Console.WriteLine("Deleting the Array...");
            sda.deleteArray();

            Console.WriteLine("After Deleting the Array..");
            sda.traverseArray();
            */
                
           /* Two Dimensional Array
             
             Console.WriteLine("Creating a blank array of size 5x5");
             twoDimensionArray tda = new twoDimensionArray(5,5);
             tda.traverseArray();

             tda.insertTheValueInTheArray(0,2,1000001);
             tda.traverseArray();

             tda.insertTheValueInTheArray(0,3,1000001);
             tda.traverseArray();

             tda.accessingTheCell(0,1);
             tda.accessingTheCell(0,3);
             tda.accessingTheCell(1,3);

             tda.deleteCellValueFromArray(0,2);
             tda.traverseArray();
              
             tda.deleteArray();
             
            */

           /* Single Linked List
           singleLinkedList list = new singleLinkedList(); 
           list.createSingleLinkedList(5);
           list.traverseLinkedList();

           list.insertInLinkedList(10,1);
           list.traverseLinkedList();

           list.insertInLinkedList(20,2);
           list.traverseLinkedList();

           list.insertInLinkedList(30,3);
           list.traverseLinkedList();

           list.insertInLinkedList(40,1);
           list.traverseLinkedList();

           Console.WriteLine("Searching for the value 40...");
           list.searchNode(40);

           Console.WriteLine("Searching for the value 50...");
           list.searchNode(50);

           Console.WriteLine("Deleting the node at location 0...");
           Console.WriteLine("Before deleting...");
           list.traverseLinkedList();
           list.deletionOfNode(0);
           Console.WriteLine("After deleting the node..");
           list.traverseLinkedList();

           Console.WriteLine("Deleting the node at location 3...");
           Console.WriteLine("Before deleting...");
           list.traverseLinkedList();
           list.deletionOfNode(3);
           Console.WriteLine("After deleting the node..");
           list.traverseLinkedList();

           Console.WriteLine("Deleting the node at location 5...");
           Console.WriteLine("Before deleting...");
           list.traverseLinkedList();
           list.deletionOfNode(5);
           Console.WriteLine("After deleting the node..");
           list.traverseLinkedList();

           list.DeleteLinkedList();
           list.traverseLinkedList();
           */

           /* Double LinkedList
            doubleLinkedList dll = new doubleLinkedList();
            dll.createDoubleLinkedList(5);
            dll.traverseLinkedList();

            dll.insertLinkedList(10,1);
            dll.traverseLinkedList();

            dll.insertLinkedList(20,2);
            dll.traverseLinkedList();

            dll.insertLinkedList(30,3);
            dll.traverseLinkedList();
             
            dll.insertLinkedList(40,4);
            dll.traverseLinkedList();

            dll.insertLinkedList(50,5);
            dll.traverseLinkedList();

            Console.WriteLine("\n\nSearching the node having value 40: ");
            dll.searchNode(40);

            Console.WriteLine("\n\nSearching the node having value 40: ");
            dll.searchNode(50);

            Console.WriteLine("\n\nPrinting the List in Order");
            dll.traverseLinkedList();
            
            Console.WriteLine("\n\nPrinting the List in Reverse Order");
            dll.traverseLinkedListInReverseOrder();

            Console.WriteLine("\n\nDeleting the node having location=2");
            Console.WriteLine("List Before Deletion:");
            dll.traverseLinkedList();
            dll.deleteNodeInLinkedList(2);
            Console.WriteLine("\n\nList after deleting the Node");
            dll.traverseLinkedList();

            Console.WriteLine("\n\nDeleting the node having location=2");
            Console.WriteLine("List Before Deletion:");
            dll.traverseLinkedList();
            dll.deleteNodeInLinkedList(3);
            Console.WriteLine("\n\nList after deleting the Node");
            dll.traverseLinkedList();
            

            dll.deleteLinkedList();
            dll.traverseLinkedList();
            */

             /* singleCircularlist
              singleCircularLinkedList sll = new singleCircularLinkedList();
              sll.createSingleCircularLinkedList(5);
              sll.insertNodeInSingularLinkedList(1,10);
              sll.insertNodeInSingularLinkedList(2,20);
              sll.insertNodeInSingularLinkedList(3,30);
              sll.insertNodeInSingularLinkedList(4,40);

              Console.WriteLine("\nTraversing the linked list");
              sll.traverseLinkedList();
              
              sll.insertNodeInSingularLinkedList(5,50);
              sll.traverseLinkedList();

              sll.insertNodeInSingularLinkedList(0,5);
              sll.traverseLinkedList();

              sll.printHeadUsingTail();

              Console.WriteLine("\nSearching the value 40");
              sll.searchNode(40);

              Console.WriteLine("\nSearching the value 50");
              sll.searchNode(50);

              Console.WriteLine("\nDeleting the node at location 3");
              sll.deleteNode(3);
              sll.traverseLinkedList();

              Console.WriteLine("\nDeleting the node at location 5");
              sll.deleteNode(5);
              sll.traverseLinkedList();

              sll.deleteLinkedList();
              sll.traverseLinkedList();
              */

            /*
            doubleCircularLinkedList dcl = new doubleCircularLinkedList();
            dcl.createDoubleLinkedList(5);
            dcl.insertDoubleLinkedList(1,10);
            dcl.insertDoubleLinkedList(2,15);
            dcl.insertDoubleLinkedList(3,20);
            dcl.insertDoubleLinkedList(4,25);

            Console.WriteLine("List Now..");
            dcl.traverseLinkedList();

            dcl.traverseLinkedListFromTail();
            dcl.printHeadUsingTail();

            Console.WriteLine("\nSearching the node having value 40:");
            dcl.searchValue(25);

            Console.WriteLine("\nSearching the node having value 200:");
            dcl.searchValue(200);

            Console.WriteLine("\nDeleting the value from location 0:");
            dcl.deleteNodeInLinkedList(0);
            dcl.traverseLinkedList();

            Console.WriteLine("\nDeleting the value from 3:");
            dcl.deleteNodeInLinkedList(3);
            dcl.traverseLinkedList();

            dcl.deleteLinkedList();
            dcl.traverseLinkedList();
            */

             /* stack
            Console.WriteLine("Creating a stack of size 5");  
            stackbyArray stack = new stackbyArray(5);
            
            Console.WriteLine("Pushing 6 values into the stack..");
            for(int i=0; i<5;i++)
            {
               stack.push(i*10);
            }
            
            Console.WriteLine("Peek value from stack..");
            stack.peek();

            Console.WriteLine("Poping value from the stack");
            for(int i=0;i<5;i++)
            {
                stack.pop();
            }

            Console.WriteLine("Deleting the Stack....");
            stack.deleteStack();
            */